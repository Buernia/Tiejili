{
.appVersion = "3146";
.formatVersion = 3;
classes = (
{
code = "zero
one
two
three
four
five
six
seven
eight
nine
";
name = CG_1;
}
);
customParameters = (
{
name = codePageRanges;
value = (
"936"
);
},
{
name = panose;
value = (
0,
0,
8,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = fsType;
value = (
);
}
);
date = "2020-12-15 00:00:00 +0000";
familyName = Tiejili;
featurePrefixes = (
{
code = "languagesystem DFLT dflt; 
languagesystem hani dflt; # CJK Ideographic default

";
name = Languagesystems;
},
{
code = "###
# OpenType Layout feature definitions
# Format: OpenType Feature File Specification version 1.25.1
# Generated on: 2022-10-25 13:47
# Generated by: FontCreator
# Font name: Tiejili
# Font copyright: Copyright © 2022 Buernia (https://github.com/Buernia), with Reserved Font Name 'Tiejili' and '铁蒺藜'. Portions Copyright © 2020 The Reggae Project Authors (https://github.com/fontworks-fonts/Reggae).
#
# Totals:
# Languagesystems: 2
# GSUB lookups: 16
# GSUB features: 16 (aalt, calt, ccmp, cpct, dlig, frac, fwid, hist, hwid, liga, pwid, ss01, ss02, ss03, vert, zero)
# GPOS lookups: 2
# GPOS features: 4 (halt, palt, vhal, vpal)

#
# Languagesystem definitions
#

#
# Global glyph class definitions
#

#
# Global lookup definitions
#

lookup SingleSubstitution2 { # GSUB lookup type SingleSubstitution
    sub colon by colon.time;
} SingleSubstitution2;

lookup SingleAdjustment1 { # GPOS lookup type SingleAdjustment
    pos minute -500;
    pos second -500;
    pos angleRight -500;
    pos comma-han -500;
    pos period-han -500;
    pos dblanglebracketright -500;
    pos cornerbracketright -500;
    pos whitecornerbracketright -500;
    pos blacklenticularbracketright -500;
    pos tortoiseshellbracketright -500;
    pos lowquotedoubleprime -500;
    pos exclam.full -500;
    pos parenright.full -500;
    pos comma.full -500;
    pos period.full -500;
    pos colon.full -500;
    pos semicolon.full -500;
    pos bracketright.full -500;
    pos braceright.full -500;
    pos quoteright.full -500;
    pos quotedblright.full -500;
    pos quoteleft.full <-500 0 -500 0>;
    pos quotedblleft.full <-500 0 -500 0>;
    pos parenleft.full <-500 0 -500 0>;
    pos tortoiseshellbracketleft <-500 0 -500 0>;
    pos bracketleft.full <-500 0 -500 0>;
    pos braceleft.full <-500 0 -500 0>;
    pos angleLeft <-500 0 -500 0>;
    pos dblanglebracketleft <-500 0 -500 0>;
    pos cornerbracketleft <-500 0 -500 0>;
    pos whitecornerbracketleft <-500 0 -500 0>;
    pos blacklenticularbracketleft <-500 0 -500 0>;
    pos quotedoubleprimeReversed <-500 0 -500 0>;
    pos dot-kata <-250 0 -500 0>;
    pos comma-han.cpct <-250 0 -500 0>;
    pos ideographicfullstop.cpct <-250 0 -500 0>;
    pos fullwidthexclamationmark.cpct <-250 0 -500 0>;
    pos fullwidthcomma.cpct <-250 0 -500 0>;
    pos fullwidthfullstop.cpct <-250 0 -500 0>;
    pos fullwidthcolon.cpct <-250 0 -500 0>;
    pos fullwidthsemicolon.cpct <-250 0 -500 0>;
} SingleAdjustment1;

lookup SingleAdjustment3 { # GPOS lookup type SingleAdjustment
    pos comma-han.vert <0 0 0 -500>;
    pos period-han.vert <0 0 0 -500>;
    pos parenright.full.vert <0 0 0 -500>;
    pos tortoiseshellbracketright.vert <0 0 0 -500>;
    pos bracketright.full.vert <0 0 0 -500>;
    pos braceright.full.vert <0 0 0 -500>;
    pos anglebracketright.vert <0 0 0 -500>;
    pos dblanglebracketright.vert <0 0 0 -500>;
    pos cornerbracketright.vert <0 0 0 -500>;
    pos whitecornerbracketright.vert <0 0 0 -500>;
    pos blacklenticularbracketright.vert <0 0 0 -500>;
    pos lowdoubleprimequotation.full.vert <0 0 0 -500>;
    pos comma.full.vert <0 0 0 -500>;
    pos period.full.vert <0 0 0 -500>;
    pos parenleft.full.vert <0 500 0 -500>;
    pos tortoiseshellbracketleft.vert <0 500 0 -500>;
    pos bracketleft.full.vert <0 500 0 -500>;
    pos braceleft.full.vert <0 500 0 -500>;
    pos anglebracketleft.vert <0 500 0 -500>;
    pos dblanglebracketleft.vert <0 500 0 -500>;
    pos cornerbracketleft.vert <0 500 0 -500>;
    pos whitecornerbracketleft.vert <0 500 0 -500>;
    pos blacklenticularbracketleft.vert <0 500 0 -500>;
    pos reverseddoubleprimequotation.full.vert <0 500 0 -500>;
    pos minute.full.vert <0 500 0 -500>;
    pos second.full.vert <0 500 0 -500>;
    pos dot-kata <0 250 0 -500>;
    pos comma-han.cpct <0 250 0 -500>;
    pos ideographicfullstop.cpct <0 250 0 -500>;
    pos fullwidthcomma.cpct <0 250 0 -500>;
    pos fullwidthfullstop.cpct <0 250 0 -500>;
} SingleAdjustment3;

lookup SingleSubstitution1 { # GSUB lookup type SingleSubstitution
    sub comma-han by comma-han.cpct;
    sub period-han by ideographicfullstop.cpct;
    sub comma.full.vert by fullwidthcomma.cpct;
    sub comma-han.vert by comma-han.cpct;
    sub period-han.vert by ideographicfullstop.cpct;
    sub colon.vert by fullwidthcolon.cpct;
    sub semicolon.vert by fullwidthsemicolon.cpct;
    sub exclam.vert by fullwidthexclamationmark.cpct;
    sub question.vert by fullwidthquestionmark.cpct;
    sub exclam.full by fullwidthexclamationmark.cpct;
    sub comma.full by fullwidthcomma.cpct;
    sub period.full by fullwidthfullstop.cpct;
    sub colon.full by fullwidthcolon.cpct;
    sub semicolon.full by fullwidthsemicolon.cpct;
    sub question.full by fullwidthquestionmark.cpct;
} SingleSubstitution1;

#
# Feature definitions
#

feature ss01 { # Stylistic Set 1
    featureNames {
        name \"Centered CJK Punctuation\"; # English - United States
        name 3 1 2052 \"居中中日韩标点\"; # Chinese - People's Republic of China
    };
    lookup SingleSubstitution1;
} ss01;

feature ss02 { # Stylistic Set 2
    featureNames {
        name \"Tilted punctuation\"; # English - United States
        name 3 1 2052 \"倾斜标点符号\"; # Chinese - People's Republic of China
    };
    sub exclamdouble by doubleexclam.ss02;
    sub exclam.vert by exclam.ss02;
    sub exclam.full by exclam.ss02;
    sub fullwidthexclamationmark.cpct by exclam.ss02;
    sub tripleexclam by tripleexclam.ss02;
} ss02;

feature ss03 { # Stylistic Set 3
    featureNames {
        name \"Fullwidth quotes\"; # English - United States
        name 3 1 2052 \"全角引号\"; # Chinese - People's Republic of China
    };
    sub quoteleft by quoteleft.full;
    sub quoteright by quoteright.full;
    sub quotedblleft by quotedblleft.full;
    sub quotedblright by quotedblright.full;
} ss03;

# Glyph class \"BASE\" already defined
# Glyph class \"MARK\" already defined
";
name = Prefix;
}
);
features = (
{
code = " # Access All Alternates
    sub quoteleft by quoteleft.full;
    sub quoteright by quoteright.full;
    sub quotedblleft by quotedblleft.full;
    sub quotedblright by quotedblright.full;
    sub exclamdouble by doubleexclam.ss02;
    sub comma-han by comma-han.cpct;
    sub period-han by ideographicfullstop.cpct;
    sub i-bopomofo by i-bopo.hist;
    sub comma.full.vert by fullwidthcomma.cpct;
    sub comma-han.vert by comma-han.cpct;
    sub period-han.vert by ideographicfullstop.cpct;
    sub colon.vert by fullwidthcolon.cpct;
    sub semicolon.vert by fullwidthsemicolon.cpct;
    sub question.vert by fullwidthquestionmark.cpct;
    sub comma.full by fullwidthcomma.cpct;
    sub period.full by fullwidthfullstop.cpct;
    sub colon.full by fullwidthcolon.cpct;
    sub semicolon.full by fullwidthsemicolon.cpct;
    sub question.full by fullwidthquestionmark.cpct;
    sub period.full.vert by fullwidthfullstop.cpct;
    sub tripleexclam by tripleexclam.ss02;
    sub i-bopo.hist by i-bopomofo;

    sub space from [enspace emspace];
    sub zero from [zero.full zero.half zero.zero zero.zero.full zero.zero.half];
    sub one from [one.full one.half];
    sub two from [two.full two.half];
    sub three from [three.full three.half];
    sub four from [four.full four.half];
    sub five from [five.full five.half];
    sub six from [six.full six.half];
    sub seven from [seven.full seven.half];
    sub eight from [eight.full eight.half];
    sub nine from [nine.full nine.half];
    sub exclam.vert from [fullwidthexclamationmark.cpct exclam.ss02 doubleexclam.ss02 tripleexclam.ss02];
    sub exclam.full from [fullwidthexclamationmark.cpct exclam.ss02 doubleexclam.ss02 tripleexclam.ss02];";
tag = aalt;
},
{
code = " # Discretionary Ligatures
    sub F A X by facsimile;
    sub G B by GBSquare;
    sub H P by HPSquare;
    sub H z by HzSquare;
    sub J I S by jis;
    sub K B by KBSquare;
    sub K K by KKSquare;
    sub M B by MBSquare;
    sub N o by numero;
    sub T E L by T_E_L;
    sub T e l by telephone;
    sub T B by T_B;
    sub c a l by calSquare;
    sub c m two by cmsquaredSquare;
    sub c m three by cmcubedSquare;
    sub c c by ccSquare;
    sub c m by cmSquare;
    sub d B by dbSquare;
    sub d l by dlSquare;
    sub i n by inSquare;
    sub k c a l by kcalSquare;
    sub k m two by kmsquaredSquare;
    sub k m three by kmcubedSquare;
    sub k g by kgSquare;
    sub k l by klSquare;
    sub k m by kmSquare;
    sub m i n by m_i_n;
    sub m m two by mmsquaredSquare;
    sub m m three by mmcubedSquare;
    sub m two by msquaredSquare;
    sub m three by mcubedSquare;
    sub m b by mbSquare;
    sub m g by mgSquare;
    sub m l by mlSquare;
    sub m m by mmSquare;
    sub m s by msSquare;
    sub n s by nsSquare;
    sub p s by psSquare;
    sub s e c by s_e_c;
    sub micro s by musSquare;
    sub mu s.full by musSquare;
    sub uni2F24 uni6B63 by taisyouEra;
    sub a-kata pa-kata prolonged-kana to-kata by apaatoSquare;
    sub a-kata prolonged-kana ru-kata by aaruSquare;
    sub i-kata n-kata ti-kata by intiSquare;
    sub ka-kata ro-kata ri-kata prolonged-kana by karoriiSquare;
    sub ki-kata ro-kata me-kata prolonged-kana to-kata ru-kata by kiromeetoruSquare;
    sub ki-kata ro-kata gu-kata ra-kata mu-kata by kiroguramuSquare;
    sub ki-kata ro-kata by kiroSquare;
    sub gu-kata ra-kata mu-kata by guramuSquare;
    sub ko-kata prolonged-kana po-kata by koopoSquare;
    sub se-kata n-kata ti-kata by sentiSquare;
    sub se-kata n-kata to-kata by sentoSquare;
    sub to-kata n-kata by tonSquare;
    sub do-kata ru-kata by doruSquare;
    sub ha-kata i-kata tu-kata by haituSquare;
    sub pa-kata prolonged-kana se-kata n-kata to-kata by paasentoSquare;
    sub bi-kata ru-kata by biruSquare;
    sub hu-kata ismall-kata prolonged-kana to-kata by huiitoSquare;
    sub he-kata ku-kata ta-kata prolonged-kana ru-kata by hekutaaruSquare;
    sub he-kata ru-kata tu-kata by herutuSquare;
    sub pe-kata prolonged-kana zi-kata by peeziSquare;
    sub ho-kata prolonged-kana n-kata by hoonSquare;
    sub ma-kata n-kata si-kata yosmall-kata n-kata by mansyonSquare;
    sub mi-kata ri-kata ba-kata prolonged-kana ru-kata by miribaaruSquare;
    sub mi-kata ri-kata by miriSquare;
    sub me-kata prolonged-kana to-kata ru-kata by meetoruSquare;
    sub ya-kata prolonged-kana do-kata by yaadoSquare;
    sub ri-kata tusmall-kata to-kata ru-kata by rittoruSquare;
    sub wa-kata tusmall-kata to-kata by wattoSquare;
    sub uni4EE4 uni548C by reiwaEra;
    sub uni5E73 uni6210 by heiseiEra;
    sub uni660E uni6CBB by meiziEra;
    sub uni662D uni548C by syouwaEra;
    sub uni6709 uni9650 uni4F1A uni793E by yuugen;
    sub uni682A uni5F0F uni4F1A uni793E by corporationSquare;
    sub uni8CA1 uni56E3 uni6CD5 uni2F08 by zaidan;
    sub F.full A.full X.full by facsimile;
    sub G.full B.full by GBSquare;
    sub H.full P.full by HPSquare;
    sub H.full z.full by HzSquare;
    sub J.full I.full S.full by jis;
    sub K.full B.full by KBSquare;
    sub K.full K.full by KKSquare;
    sub M.full B.full by MBSquare;
    sub N.full o.full by numero;
    sub T.full E.full L.full by T_E_L;
    sub T.full e.full l.full by telephone;
    sub T.full B.full by T_B;
    sub c.full a.full l.full by calSquare;
    sub c.full m.full two.full by cmsquaredSquare;
    sub c.full m.full three.full by cmcubedSquare;
    sub c.full c.full by ccSquare;
    sub c.full m.full by cmSquare;
    sub d.full B.full by dbSquare;
    sub d.full l.full by dlSquare;
    sub i.full n.full by inSquare;
    sub k.full c.full a.full l.full by kcalSquare;
    sub k.full m.full two.full by kmsquaredSquare;
    sub k.full m.full three.full by kmcubedSquare;
    sub k.full g.full by kgSquare;
    sub k.full l.full by klSquare;
    sub k.full m.full by kmSquare;
    sub m.full i.full n.full by m_i_n;
    sub m.full m.full two.full by mmsquaredSquare;
    sub m.full m.full three.full by mmcubedSquare;
    sub m.full two.full by msquaredSquare;
    sub m.full three.full by mcubedSquare;
    sub m.full b.full by mbSquare;
    sub m.full g.full by mgSquare;
    sub m.full l.full by mlSquare;
    sub m.full m.full by mmSquare;
    sub m.full s.full by msSquare;
    sub n.full s.full by nsSquare;
    sub p.full s.full by psSquare;
    sub s.full e.full c.full by s_e_c;
    sub exclam.full exclam.full exclam.full exclam.full by quadrupleexclam;
    sub exclam.full exclam.full exclam.full by tripleexclam;
    sub exclam.full exclam.full by exclamdouble;
    sub exclam.full question.full by exclamationquestion;
    sub question.full question.full question.full by triplequestion;
    sub question.full exclam.full by questionexclamation;
    sub question.full question.full by doublequestion;
    sub fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct by quadrupleexclam;
    sub fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct by tripleexclam;
    sub fullwidthexclamationmark.cpct fullwidthexclamationmark.cpct by exclamdouble;
    sub fullwidthexclamationmark.cpct fullwidthquestionmark.cpct by exclamationquestion;
    sub fullwidthquestionmark.cpct fullwidthquestionmark.cpct fullwidthquestionmark.cpct by triplequestion;
    sub fullwidthquestionmark.cpct fullwidthexclamationmark.cpct by questionexclamation;
    sub fullwidthquestionmark.cpct fullwidthquestionmark.cpct by doublequestion;";
tag = dlig;
},
{
code = " # Standard Ligatures
    sub f i by fi;
    sub f l by fl;";
tag = liga;
},
{
code = " # Fractions
    sub one slash two by onehalf;
    sub one slash four by onequarter;
    sub three slash four by threequarters;";
tag = frac;
},
{
code = " # Proportional Alternate Widths
    lookup SingleAdjustment1;";
tag = palt;
},
{
code = " # Alternate Half Widths
    lookup SingleAdjustment1;";
tag = halt;
},
{
code = " # Proportional Alternate Vertical Metrics
    lookup SingleAdjustment3;";
tag = vpal;
},
{
code = " # Alternate Vertical Half Metrics
    lookup SingleAdjustment3;";
tag = vhal;
},
{
code = " # Glyph Composition / Decomposition
    sub M grave by Mgrave;
    sub M macron by Mmacron;
    sub M caroncomb by Mcaron;
    sub N macron by Nmacron;
    sub m grave by mgrave;
    sub m macron by mmacron;
    sub m caroncomb by mcaron;
    sub n macron by nmacron;
    sub Ecircumflex macron by Ecircumflexacutemacron;
    sub Ecircumflex caroncomb by Ecircumflexcaron;
    sub ecircumflex macron by ecircumflexacutemacron;
    sub ecircumflex caroncomb by ecircumflexcaron;
    sub emdash emdash emdash by threeemdash;
    sub emdash emdash by twoemdash;";
tag = ccmp;
},
{
code = " # Centered CJK Punctuation
    lookup SingleSubstitution1;";
tag = cpct;
},
{
code = " # Contextual Alternates
    sub @CG_1 colon' lookup SingleSubstitution2 @CG_1;";
tag = calt;
},
{
code = " # Half Widths
    sub space by enspace;
    sub zero by zero.half;
    sub one by one.half;
    sub two by two.half;
    sub three by three.half;
    sub four by four.half;
    sub five by five.half;
    sub six by six.half;
    sub seven by seven.half;
    sub eight by eight.half;
    sub nine by nine.half;
    sub emspace by enspace;
    sub zero.full by zero.half;
    sub one.full by one.half;
    sub two.full by two.half;
    sub three.full by three.half;
    sub four.full by four.half;
    sub five.full by five.half;
    sub six.full by six.half;
    sub seven.full by seven.half;
    sub eight.full by eight.half;
    sub nine.full by nine.half;";
tag = hwid;
},
{
code = " # Full Widths
    sub space by emspace;
    sub zero by zero.full;
    sub one by one.full;
    sub two by two.full;
    sub three by three.full;
    sub four by four.full;
    sub five by five.full;
    sub six by six.full;
    sub seven by seven.full;
    sub eight by eight.full;
    sub nine by nine.full;
    sub enspace by emspace;
    sub quoteleft by quoteleft.full;
    sub quoteright by quoteright.full;
    sub quotedblleft by quotedblleft.full;
    sub quotedblright by quotedblright.full;
    sub zero.half by zero.full;
    sub one.half by one.full;
    sub two.half by two.full;
    sub three.half by three.full;
    sub four.half by four.full;
    sub five.half by five.full;
    sub six.half by six.full;
    sub seven.half by seven.full;
    sub eight.half by eight.full;
    sub nine.half by nine.full;";
tag = fwid;
},
{
code = " # Proportional Widths
    sub enspace by space;
    sub emspace by space;
    sub zero.full by zero;
    sub one.full by one;
    sub two.full by two;
    sub three.full by three;
    sub four.full by four;
    sub five.full by five;
    sub six.full by six;
    sub seven.full by seven;
    sub eight.full by eight;
    sub nine.full by nine;
    sub zero.half by zero;
    sub one.half by one;
    sub two.half by two;
    sub three.half by three;
    sub four.half by four;
    sub five.half by five;
    sub six.half by six;
    sub seven.half by seven;
    sub eight.half by eight;
    sub nine.half by nine;
    sub quoteleft.full by quoteleft;
    sub quoteright.full by quoteright;
    sub quotedblleft.full by quotedblleft;
    sub quotedblright.full by quotedblright;";
tag = pwid;
},
{
code = " # Historical Forms
    sub i-bopomofo by i-bopo.hist;";
tag = hist;
},
{
code = " # Slashed Zero
    sub zero by zero.zero;
    sub zero.half by zero.zero.half;
    sub zero.full by zero.zero.full;";
tag = zero;
},
{
code = " # Vertical Writing
    sub hyphentwo by endash.vert;
    sub dblverticalbar by doubleverticalline.vert;
    sub twodotenleader by twodotpunctuation;
    sub ellipsis by tricolon;
    sub minute by minute.full.vert;
    sub second by second.full.vert;
    sub leftArrow by upArrow;
    sub upArrow by rightArrow;
    sub rightArrow by downArrow;
    sub downArrow by leftArrow;
    sub rightOverLeftArrow by upAndDownArrow;
    sub upAndDownArrow by rightOverLeftArrow;
    sub leftAndRightArrow by downAndUpArrow;
    sub leftWhiteArrow by upWhiteArrow;
    sub upWhiteArrow by rightWhiteArrow;
    sub rightWhiteArrow by downWhiteArrow;
    sub downWhiteArrow by leftWhiteArrow;
    sub downAndUpArrow by leftAndRightArrow;
    sub angleLeft by anglebracketleft.vert;
    sub angleRight by anglebracketright.vert;
    sub boxLightHorizontal by boxLightVertical;
    sub boxHeavyHorizontal by boxHeavyVertical;
    sub boxLightVertical by boxLightHorizontal;
    sub boxHeavyVertical by boxHeavyHorizontal;
    sub boxLightTripleDashHorizontal by boxLightTripleDashVertical;
    sub boxHeavyTripleDashHorizontal by boxHeavyTripleDashVertical;
    sub boxLightTripleDashVertical by boxLightTripleDashHorizontal;
    sub boxHeavyTripleDashVertical by boxHeavyTripleDashHorizontal;
    sub boxLightQuadrupleDashHorizontal by boxLightQuadrupleDashVertical;
    sub boxHeavyQuadrupleDashHorizontal by boxHeavyQuadrupleDashVertical;
    sub boxLightQuadrupleDashVertical by boxLightQuadrupleDashHorizontal;
    sub boxHeavyQuadrupleDashVertical by boxHeavyQuadrupleDashHorizontal;
    sub boxLightDownAndRight by boxLightDownAndLeft;
    sub boxDownLightAndRightHeavy by boxDownHeavyAndLeftLight;
    sub boxDownHeavyAndRightLight by boxDownLightAndLeftHeavy;
    sub boxHeavyDownAndRight by boxHeavyDownAndLeft;
    sub boxLightDownAndLeft by boxLightUpAndLeft;
    sub boxDownLightAndLeftHeavy by boxUpHeavyAndLeftLight;
    sub boxDownHeavyAndLeftLight by boxUpLightAndLeftHeavy;
    sub boxHeavyDownAndLeft by boxHeavyUpAndLeft;
    sub boxLightUpAndRight by boxLightDownAndRight;
    sub boxUpLightAndRightHeavy by boxDownHeavyAndRightLight;
    sub boxUpHeavyAndRightLight by boxDownLightAndRightHeavy;
    sub boxHeavyUpAndRight by boxHeavyDownAndRight;
    sub boxLightUpAndLeft by boxLightUpAndRight;
    sub boxUpLightAndLeftHeavy by boxUpHeavyAndRightLight;
    sub boxUpHeavyAndLeftLight by boxUpLightAndRightHeavy;
    sub boxHeavyUpAndLeft by boxHeavyUpAndRight;
    sub boxLightVerticalAndRight by boxLightDownAndHorizontal;
    sub boxVerticalLightAndRightHeavy by boxDownHeavyAndHorizontalLight;
    sub boxUpHeavyAndRightDownLight by boxRightHeavyAndLeftDownLight;
    sub boxDownHeavyAndRightUpLight by boxLeftHeavyAndRightDownLight;
    sub boxVerticalHeavyAndRightLight by boxDownLightAndHorizontalHeavy;
    sub boxDownLightAndRightUpHeavy by boxLeftLightAndRightDownHeavy;
    sub boxUpLightAndRightDownHeavy by boxRightLightAndLeftDownHeavy;
    sub boxHeavyVerticalAndRight by boxHeavyDownAndHorizontal;
    sub boxLightVerticalAndLeft by boxLightUpAndHorizontal;
    sub boxVerticalLightAndLeftHeavy by boxUpHeavyAndHorizontalLight;
    sub boxUpHeavyAndLeftDownLight by boxRightHeavyAndLeftUpLight;
    sub boxDownHeavyAndLeftUpLight by boxLeftHeavyAndRightUpLight;
    sub boxVerticalHeavyAndLeftLight by boxUpLightAndHorizontalHeavy;
    sub boxDownLightAndLeftUpHeavy by boxLeftLightAndRightUpHeavy;
    sub boxUpLightAndLeftDownHeavy by boxRightLightAndLeftUpHeavy;
    sub boxHeavyVerticalAndLeft by boxHeavyUpAndHorizontal;
    sub boxLightDownAndHorizontal by boxLightVerticalAndLeft;
    sub boxLeftHeavyAndRightDownLight by boxUpHeavyAndLeftDownLight;
    sub boxRightHeavyAndLeftDownLight by boxDownHeavyAndLeftUpLight;
    sub boxDownLightAndHorizontalHeavy by boxVerticalHeavyAndLeftLight;
    sub boxDownHeavyAndHorizontalLight by boxVerticalLightAndLeftHeavy;
    sub boxRightLightAndLeftDownHeavy by boxDownLightAndLeftUpHeavy;
    sub boxLeftLightAndRightDownHeavy by boxUpLightAndLeftDownHeavy;
    sub boxHeavyDownAndHorizontal by boxHeavyVerticalAndLeft;
    sub boxLightUpAndHorizontal by boxLightVerticalAndRight;
    sub boxLeftHeavyAndRightUpLight by boxUpHeavyAndRightDownLight;
    sub boxRightHeavyAndLeftUpLight by boxDownHeavyAndRightUpLight;
    sub boxUpLightAndHorizontalHeavy by boxVerticalHeavyAndRightLight;
    sub boxUpHeavyAndHorizontalLight by boxVerticalLightAndRightHeavy;
    sub boxRightLightAndLeftUpHeavy by boxDownLightAndRightUpHeavy;
    sub boxLeftLightAndRightUpHeavy by boxUpLightAndRightDownHeavy;
    sub boxHeavyUpAndHorizontal by boxHeavyVerticalAndRight;
    sub boxLeftHeavyAndRightVerticalLight by boxUpHeavyAndDownHorizontalLight;
    sub boxRightHeavyAndLeftVerticalLight by boxDownHeavyAndUpHorizontalLight;
    sub boxVerticalLightAndHorizontalHeavy by boxVerticalHeavyAndHorizontalLight;
    sub boxUpHeavyAndDownHorizontalLight by boxRightHeavyAndLeftVerticalLight;
    sub boxDownHeavyAndUpHorizontalLight by boxLeftHeavyAndRightVerticalLight;
    sub boxVerticalHeavyAndHorizontalLight by boxVerticalLightAndHorizontalHeavy;
    sub boxLeftUpHeavyAndRightDownLight by boxRightUpHeavyAndLeftDownLight;
    sub boxRightUpHeavyAndLeftDownLight by boxRightDownHeavyAndLeftUpLight;
    sub boxLeftDownHeavyAndRightUpLight by boxLeftUpHeavyAndRightDownLight;
    sub boxRightDownHeavyAndLeftUpLight by boxLeftDownHeavyAndRightUpLight;
    sub boxDownLightAndUpHorizontalHeavy by boxLeftLightAndRightVerticalHeavy;
    sub boxUpLightAndDownHorizontalHeavy by boxRightLightAndLeftVerticalHeavy;
    sub boxRightLightAndLeftVerticalHeavy by boxDownLightAndUpHorizontalHeavy;
    sub boxLeftLightAndRightVerticalHeavy by boxUpLightAndDownHorizontalHeavy;
    sub leftWhiteIndex by upWhiteIndex;
    sub upWhiteIndex by rightWhiteIndex;
    sub rightWhiteIndex by downWhiteIndex;
    sub downWhiteIndex by leftWhiteIndex;
    sub rightTriangleBlackArrow by downBlackArrow;
    sub leftBlackArrow by upBlackArrow;
    sub upBlackArrow by rightTriangleBlackArrow;
    sub downBlackArrow by leftBlackArrow;
    sub comma-han by comma-han.vert;
    sub period-han by period-han.vert;
    sub dblanglebracketleft by dblanglebracketleft.vert;
    sub dblanglebracketright by dblanglebracketright.vert;
    sub cornerbracketleft by cornerbracketleft.vert;
    sub cornerbracketright by cornerbracketright.vert;
    sub whitecornerbracketleft by whitecornerbracketleft.vert;
    sub whitecornerbracketright by whitecornerbracketright.vert;
    sub blacklenticularbracketleft by blacklenticularbracketleft.vert;
    sub blacklenticularbracketright by blacklenticularbracketright.vert;
    sub tortoiseshellbracketleft by tortoiseshellbracketleft.vert;
    sub tortoiseshellbracketright by tortoiseshellbracketright.vert;
    sub wavedash by asciitilde.full.vert;
    sub quotedoubleprimeReversed by reverseddoubleprimequotation.full.vert;
    sub lowquotedoubleprime by lowdoubleprimequotation.full.vert;
    sub asmall-hira by hiraganasmalla-kana.vert;
    sub ismall-hira by hiraganasmalli-kana.vert;
    sub usmall-hira by hiraganasmallu-kana.vert;
    sub esmall-hira by hiraganasmalle-kana.vert;
    sub osmall-hira by hiraganasmallo-kana.vert;
    sub tusmall-hira by hiraganasmalltu-kana.vert;
    sub yasmall-hira by hiraganasmallya-kana.vert;
    sub yusmall-hira by hiraganasmallyu-kana.vert;
    sub yosmall-hira by hiraganasmallyo-kana.vert;
    sub wasmall-hira by hiraganasmallwa-kana.vert;
    sub kasmall-hira by hiraganasmallka-kana.vert;
    sub kesmall-hira by hiraganasmallke-kana.vert;
    sub voiced-kana by katakanahiraganavoicedsoundmod.vert;
    sub semivoiced-kana by katakanahiraganasemivoicedsoundmod.vert;
    sub asmall-kata by katakanasmalla-kana.vert;
    sub ismall-kata by katakanasmalli-kana.vert;
    sub usmall-kata by katakanasmallu-kana.vert;
    sub esmall-kata by katakanasmalle-kana.vert;
    sub osmall-kata by katakanasmallo-kana.vert;
    sub tusmall-kata by katakanasmalltu-kana.vert;
    sub yasmall-kata by katakanasmallya-kana.vert;
    sub yusmall-kata by katakanasmallyu-kana.vert;
    sub yosmall-kata by katakanasmallyo-kana.vert;
    sub wasmall-kata by katakanasmallwa-kana.vert;
    sub kasmall-kata by katakanasmallka-kana.vert;
    sub kesmall-kata by katakanasmallke-kana.vert;
    sub prolonged-kana by katakanahiraganaprolongedsoundmod.vert;
    sub apaatoSquare by squareapaato-kana.vert;
    sub aaruSquare by squareaaru-kana.vert;
    sub intiSquare by squareinti-kana.vert;
    sub karoriiSquare by squarekarorii-kana.vert;
    sub kiroSquare by squarekiro-kana.vert;
    sub kiroguramuSquare by squarekiroguramu-kana.vert;
    sub kiromeetoruSquare by squarekiromeetoru-kana.vert;
    sub guramuSquare by squareguramu-kana.vert;
    sub koopoSquare by squarekoopo-kana.vert;
    sub sentiSquare by squaresenti-kana.vert;
    sub sentoSquare by squaresento-kana.vert;
    sub doruSquare by squaredoru-kana.vert;
    sub tonSquare by squareton-kana.vert;
    sub haituSquare by squarehaitu-kana.vert;
    sub paasentoSquare by squarepaasento-kana.vert;
    sub biruSquare by squarebiru-kana.vert;
    sub huiitoSquare by squarehuiito-kana.vert;
    sub hekutaaruSquare by squarehekutaaru-kana.vert;
    sub herutuSquare by squareherutu-kana.vert;
    sub peeziSquare by squarepeezi-kana.vert;
    sub hoonSquare by squarehoon-kana.vert;
    sub mansyonSquare by squaremansyon-kana.vert;
    sub miriSquare by squaremiri-kana.vert;
    sub miribaaruSquare by squaremiribaaru-kana.vert;
    sub meetoruSquare by squaremeetoru-kana.vert;
    sub yaadoSquare by squareyaado-kana.vert;
    sub rittoruSquare by squarerittoru-kana.vert;
    sub wattoSquare by squarewatto-kana.vert;
    sub corporationSquare by squarecorporation.vert;
    sub exclam.full by exclam.vert;
    sub parenleft.full by parenleft.full.vert;
    sub parenright.full by parenright.full.vert;
    sub comma.full by comma.full.vert;
    sub period.full by period.full.vert;
    sub colon.full by colon.vert;
    sub semicolon.full by semicolon.vert;
    sub equal.full by equal.full.vert;
    sub question.full by question.vert;
    sub bracketleft.full by bracketleft.full.vert;
    sub bracketright.full by bracketright.full.vert;
    sub underscore.full by underscore.full.vert;
    sub braceleft.full by braceleft.full.vert;
    sub bar.full by bar.full.vert;
    sub braceright.full by braceright.full.vert;
    sub macron.full by macron.full.vert;
    sub quoteleft.full by cornerbracketleft.vert;
    sub quoteright.full by cornerbracketright.vert;
    sub quotedblleft.full by whitecornerbracketleft.vert;
    sub quotedblright.full by whitecornerbracketright.vert;
    sub yuugen by yuugen.vert;
    sub zaidan by zaidan.vert;
    sub i-bopo.hist by i-bopomofo;";
tag = vert;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 880;
},
{
name = typoDescender;
value = -120;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1160;
},
{
name = winDescent;
value = 288;
},
{
name = hheaAscender;
value = 1160;
},
{
name = hheaDescender;
value = -288;
},
{
name = hheaLineGap;
value = 0;
},
{
name = strikeoutPosition;
value = 342;
},
{
name = strikeoutSize;
value = 50;
}
);
id = master01;
metricValues = (
{
pos = 880;
},
{
pos = 780;
},
{
pos = 557;
},
{
},
{
pos = -120;
},
{
}
);
name = Regular;
}
);
instances = (
{
instanceInterpolations = {
master01 = 1;
};
name = Regular;
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = designers;
values = (
{
language = dflt;
value = "奈白不弍 (Buernia)";
}
);
},
{
key = designerURL;
value = "https://github.com/Buernia";
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "Ershou Xiaoxi Press";
}
);
},
{
key = manufacturerURL;
value = "https://github.com/Buernia";
},
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright © 2022 Buernia (https://github.com/Buernia), with Reserved Font Name 'Tiejili' and '铁蒺藜'. Portions Copyright © 2020 The Reggae Project Authors (https://github.com/fontworks-fonts/Reggae).";
}
);
},
{
key = versionString;
value = "Version 1.00;February 21, 2021;FontCreator 12.0.0.2525 32-bit";
},
{
key = vendorID;
value = BUER;
},
{
key = uniqueID;
value = "Reggae One SC:Version 1.00";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = familyNames;
values = (
{
language = ZHS;
value = "铁蒺藜体";
}
);
}
);
unitsPerEm = 1000;
userData = {
UFOFormat = 3;
};
versionMajor = 1;
versionMinor = 66;
}
